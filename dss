import hashlib
import math

def generate_keys():
    p=61
    q=53
    n=p * q
    phi=(p - 1) * (q - 1)
    e=17 
    d=pow(e,-1,phi)
    return e,d,n
def simple_hash(msg):
    h=hashlib.sha256(msg.encode()).hexdigest()
    return int(h,16)

def sign_message(msg,d,n):
    h=simple_hash(msg) % n
    signature=pow(h, d, n)
    return signature

def verify_signature(msg, signature, e, n):
    h=simple_hash(msg) % n
    h_from_signature=pow(signature, e, n)
    return h==h_from_signature

e, d, n=generate_keys()
message="Hello"
print(f"Original Message: {message}")
signature = sign_message(message, d, n)
print(f"Digital Signature: {signature}")
is_valid=verify_signature(message, signature, e, n)
print(f"Signature Valid? {'Yes' if is_valid else 'No'}")
tampered_message="Hallo"
is_valid=verify_signature(tampered_message, signature, e, n)
print(f"TAMPERED Signature Valid? {'Yes' if is_valid else 'No'}")
